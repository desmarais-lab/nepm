% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nepm.R
\name{simulate_time_period}
\alias{simulate_time_period}
\title{A function to simulate a single time period from nepr}
\usage{
simulate_time_period(ytm1, x, beta, gamma, ties, sig)
}
\arguments{
\item{ytm1}{is a nodes x 1 vector of values of y in the previous time period}

\item{x}{is a nodes x k matrix where k is the number of covariates}

\item{beta}{is a (k + 1) x 1 vector of regression coefficients}

\item{gamma}{is a nties x 1 vector of tie effects}

\item{ties}{is a nties x 2 matrix where the columns are in order of sender/receiver}

\item{sigsq}{is the standard deviation of the error term}
}
\value{
numeric vector the same length as ytm1 corresponding to the simulated outcomes.
}
\description{
A function to simulate a single time period from nepr
}
\examples{
library(nepm)

## generative process for NEPM
# set some parameters
times <- 50 # time periods in data
nodes <- 50 # number of nodes
nties <- 20 # number of ties

# simulate some data
set.seed(1001416)
node_id <- paste("n",1:nodes,sep="")
possible_ties <- rbind(t(combn(node_id,2)), t(combn(node_id,2))[,c(2,1)])
ties <- possible_ties[sample(1:nrow(possible_ties),nties),] # select the ties

# make model parameter values
gamma <- .45 # set parameter to force stationarity
beta <- c(.5,-.5)
sig <- 1

# generate a covariate that is not time-varying (easy to make time varying)
x <- rnorm(nodes)



# matrix of simulated time periods
ytm1 <- rnorm(nodes,sd=sig)
panel_data <- NULL
for(t in 1:(1000+times)){
  yt <- simulate_time_period(ytm1,x,beta,gamma,ties,1)
  panel_data <- rbind(panel_data,t(yt))
  ytm1 <- yt
}

# take last time steps as final data
panel_data <- panel_data[1001:(1000+times),]

# long data
long_data <- NULL
for(i in 1:ncol(panel_data)){
  dati <- data.frame(id = rep(paste("n",i,sep=""),nrow(panel_data)),y=panel_data[,i],
                     time=1:nrow(panel_data),x=x[i])
  long_data <- rbind(long_data,dati)

}

system.time(nepm_test <- nepm(long_data,x_names="x",
                              y= "y",
                              id ="id",
                              time = "time"))

nepm_estimate <- lm(nepm_test$nepm_formula,data=nepm_test$new_pdat)
}
